name: "Deploy"
on:
  push:
    branches:
      - main

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  deploy_website:
    name: Deploy Website
    runs-on: ubuntu-latest

    steps:
    - name: Checkout (GitHub)
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::030878269276:role/gh_auth
        aws-region: eu-west-2

    - name: Install bun
      uses: oven-sh/setup-bun@v1

    - name: Install temp SST build
      run: mkdir temp-sst-bun-dist && cd temp-sst-bun-dist && git init && git clone https://github.com/noot-oss/temp-sst-bun-dist.git && cd temp-sst-bun-dist && bun install && bun pm ls --all && bun link

    - name: Install deps
      run: bun link sst && bun install
      working-directory: "ts"

    - name: Move node_modules
      run: rm -rf ./apps/web/node_modules && mkdir ./apps/web/node_modules && mv node_modules ./apps/web
      working-directory: "ts"

    - name: Deploy
      run: |
        touch .env.local
        echo NEXT_PUBLIC_GITHUB_SHA=${{ github.sha }} >> .env.local
        bun run sst deploy --stage prod
      working-directory: "ts/apps/web"
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
        NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
        DISCORD_CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}
        DISCORD_CLIENT_SECRET: ${{ secrets.DISCORD_CLIENT_SECRET }}
        UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
        UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}
        WEB_SITE_AWS_ARN: ${{ secrets.WEB_SITE_AWS_ARN }}
        NEXT_PUBLIC_UMAMI_CODE: ${{ secrets.NEXT_PUBLIC_UMAMI_CODE }}
  deploy_api:
    name: Deploy API
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (GitHub)
        uses: actions/checkout@v3

      - name: Install bun
        uses: oven-sh/setup-bun@v1

      - name: Install temp SST build
        run: mkdir temp-sst-bun-dist && cd temp-sst-bun-dist && git init && git clone https://github.com/noot-oss/temp-sst-bun-dist.git && cd temp-sst-bun-dist && bun install && bun link


      - name: Install deps
        run: bun link sst && bun install
        working-directory: "ts"

      - name: Deploy
        run: bun run deploy
        working-directory: "ts/apps/api"
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
          UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}
  deploy_box_serve:
    name: Deploy Box Serve
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (GitHub)
        uses: actions/checkout@v3

      - name: Install bun
        uses: oven-sh/setup-bun@v1

      - name: Install temp SST build
        run: mkdir temp-sst-bun-dist && cd temp-sst-bun-dist && git init && git clone https://github.com/noot-oss/temp-sst-bun-dist.git && cd temp-sst-bun-dist && bun install && bun link

      - name: Install deps
        run: bun link sst && bun install
        working-directory: "ts"

      - name: Build
        run: bun run build
        working-directory: "ts/apps/boxServe"

      - name: Deploy
        run: bun run deploy
        working-directory: "ts/apps/boxServe"
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
  deploy_docs:
    name: Deploy Docs
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (GitHub)
        uses: actions/checkout@v3

      - name: Install bun
        uses: oven-sh/setup-bun@v1

      - name: Install temp SST build
        run: mkdir temp-sst-bun-dist && cd temp-sst-bun-dist && git init && git clone https://github.com/noot-oss/temp-sst-bun-dist.git && cd temp-sst-bun-dist && bun install && bun link


      - name: Install deps
        run: bun link sst && bun install
        working-directory: "ts"

      - name: Build
        run: bun run build
        working-directory: "ts/apps/docs-web"

      - name: Deploy
        run: bun run deploy
        working-directory: "ts/apps/docs-web"
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
